# -*- coding: utf-8 -*-
"""Copy of Welcome To Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pqFx8fwfnRcFTK6kbKUHtHIXcvmqrmvU
"""

!pip install -U -q PyDrive

from pydrive.auth import GoogleAuth

from pydrive.drive import GoogleDrive

from google.colab import auth

from oauth2client.client import GoogleCredentials

  # Authenticate and create the PyDrive client.

auth.authenticate_user()

gauth = GoogleAuth()

gauth.credentials = GoogleCredentials.get_application_default()

drive = GoogleDrive(gauth)

link ='https://drive.google.com/file/d/1VMero8c9s96pENyWVZuV-O8dpZKhbXYX/view?usp=share_link'
import pandas as pd

 # to get the id part of the file

id = link.split("/")[-2]

downloaded = drive.CreateFile({'id':id})

downloaded.GetContentFile('SW_finance_char.csv') 

# df = pd.read_csv('SW_finance_char.csv')

# print(df)

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
finance_char_df = pd.read_csv("SW_finance_char.csv")

# Analysis of mean income
finance_char_df.head(13)

# Get the list of all column names from headers
column_headers = list(finance_char_df.columns.values)
print("The Column Header :", column_headers)

owner_col = 'Census Tract 64, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 64, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_64_df = finance_char_df[['Label (Grouping)', 'Census Tract 64, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[2:15 , :]
tract_64_df.head()

tract_64_df[owner_col]=tract_64_df[owner_col].replace(regex=[r'\D+'], value="")
tract_64_df[renter_col]=tract_64_df[renter_col].replace(regex=[r'\D+'], value="")

tract_64_df = tract_64_df.dropna(subset=[owner_col, renter_col])

tract_64_df[owner_col] = tract_64_df[owner_col].astype(int)
tract_64_df[owner_col] = tract_64_df[owner_col].astype(int)
tract_64_df.head(11)

import plotly.graph_objects as gp
tract_64_df = tract_64_df.head(11)
y_income = list(tract_64_df['Label (Grouping)'])
x_O = tract_64_df[owner_col] *-1
x_R = tract_64_df[renter_col] 

fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Mean Income of Tract 64', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Unit',
                              title_font_size = 14),
                 # Reducing the font size of the y-axis labels
                 yaxis = dict(tickfont = dict(size = 10)))
# Setting the row names


fig.show()

owner_col = 'Census Tract 102.01, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 102.01, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_10201_df = finance_char_df[['Label (Grouping)', 'Census Tract 102.01, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[2:15 , :]
tract_10201_df.head()

tract_10201_df[owner_col]=tract_10201_df[owner_col].replace(regex=[r'\D+'], value="")
tract_10201_df[renter_col] = tract_10201_df[renter_col].replace(regex=[r'\D+'], value="")
tract_10201_df = tract_10201_df.dropna(subset=[owner_col, renter_col])

tract_10201_df[owner_col] = tract_10201_df[owner_col].astype(int)
tract_10201_df[renter_col] = tract_10201_df[renter_col].astype(int)

tract_10201_df.head(11)

tract_10201_df = tract_10201_df.head(11)

import plotly.graph_objects as gp

y_income = list(tract_10201_df['Label (Grouping)'])
x_O = tract_10201_df[owner_col] * -1
x_R = tract_10201_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Mean Income of Tract 102.01', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

owner_col = 'Census Tract 102.02, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 102.02, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_10202_df = finance_char_df[['Label (Grouping)', 'Census Tract 102.02, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[2:15 , :]
tract_10202_df.head()

tract_10202_df[owner_col]=tract_10202_df[owner_col].replace(regex=[r'\D+'], value="")
tract_10202_df[renter_col] = tract_10202_df[renter_col].replace(regex=[r'\D+'], value="")
tract_10202_df = tract_10202_df.dropna(subset=[owner_col, renter_col])

tract_10202_df[owner_col] = tract_10202_df[owner_col].astype(int)
tract_10202_df[renter_col] = tract_10202_df[renter_col].astype(int)

tract_10202_df.head(11)

tract_10202_df = tract_10202_df.head(11)

import plotly.graph_objects as gp

y_income = list(tract_10202_df['Label (Grouping)'])
x_O = tract_10202_df[owner_col] * -1
x_R = tract_10202_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Mean Income of Tract 102.02', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

owner_col = 'Census Tract 105, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 105, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_105_df = finance_char_df[['Label (Grouping)', 'Census Tract 105, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[2:15 , :]
tract_105_df.head()

tract_105_df[owner_col]=tract_105_df[owner_col].replace(regex=[r'\D+'], value="")
tract_105_df[renter_col] = tract_105_df[renter_col].replace(regex=[r'\D+'], value="")
tract_105_df = tract_105_df.dropna(subset=[owner_col, renter_col])

tract_105_df[owner_col] = tract_105_df[owner_col].astype(int)
tract_105_df[renter_col] = tract_105_df[renter_col].astype(int)

tract_105_df.head(11)

tract_105_df = tract_105_df.head(11)

import plotly.graph_objects as gp

y_income = list(tract_105_df['Label (Grouping)'])
x_O = tract_105_df[owner_col] * -1
x_R = tract_105_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Mean Income of Tract 105', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

owner_col = 'Census Tract 110.01, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 110.01, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_11001_df = finance_char_df[['Label (Grouping)', 'Census Tract 110.01, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[2:15 , :]
tract_11001_df.head()



tract_11001_df[owner_col]=tract_11001_df[owner_col].replace(regex=[r'\D+'], value="")
tract_11001_df[renter_col] = tract_11001_df[renter_col].replace(regex=[r'\D+'], value="")
tract_11001_df = tract_11001_df.dropna(subset=[owner_col, renter_col])

tract_11001_df[owner_col] = tract_11001_df[owner_col].astype(int)
tract_11001_df[renter_col] = tract_11001_df[renter_col].astype(int)

tract_11001_df.head(11)





tract_11001_df = tract_11001_df.head(11)

import plotly.graph_objects as gp

y_income = list(tract_11001_df['Label (Grouping)'])
x_O = tract_11001_df[owner_col] * -1
x_R = tract_11001_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Mean Income of Tract 110.01', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

owner_col = 'Census Tract 110.02, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 110.02, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_11002_df = finance_char_df[['Label (Grouping)', 'Census Tract 110.02, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[2:15 , :]
tract_11002_df.head()



tract_11002_df[owner_col]=tract_11002_df[owner_col].replace(regex=[r'\D+'], value="")
tract_11002_df[renter_col] = tract_11002_df[renter_col].replace(regex=[r'\D+'], value="")
tract_11002_df = tract_11002_df.dropna(subset=[owner_col, renter_col])

tract_11002_df[owner_col] = tract_11002_df[owner_col].astype(int)
tract_11002_df[renter_col] = tract_11002_df[renter_col].astype(int)

tract_11002_df.head(11)





tract_11002_df = tract_11002_df.head(11)

import plotly.graph_objects as gp

y_income = list(tract_11002_df['Label (Grouping)'])
x_O = tract_11002_df[owner_col] * -1
x_R = tract_11002_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Mean Income of Tract 110.02', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

finance_char_df.iloc[14:25]

# Tract 64 Analysis

owner_col = 'Census Tract 64, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 64, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_64_df = finance_char_df[['Label (Grouping)', 'Census Tract 64, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[15:26 , :]
tract_64_df.head()

tract_64_df = tract_64_df.applymap(lambda x: 0 if x == '(X)' else x)
tract_64_df[owner_col] = tract_64_df[owner_col].str.replace(',', '').astype(float)
tract_64_df[renter_col] = tract_64_df[renter_col].str.replace(',', '').astype(float)

tract_64_df.head(10)

import plotly.graph_objects as gp
tract_64_df = tract_64_df.head(10)
y_income = list(tract_64_df['Label (Grouping)'])
x_O = tract_64_df[owner_col] * -1
x_R = tract_64_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Monthly Cost of Tract 64', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

# Tract 102.01 Analysis

owner_col = 'Census Tract 102.01, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 102.01, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_10201_df = finance_char_df[['Label (Grouping)', 'Census Tract 102.01, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[15:26 , :]
tract_10201_df.head()

tract_10201_df = tract_10201_df.applymap(lambda x: 0 if x == '(X)' else x)
tract_10201_df[owner_col] = tract_10201_df[owner_col].str.replace(',', '').astype(float)
tract_10201_df[renter_col] = tract_10201_df[renter_col].str.replace(',', '').astype(float)

tract_10201_df.head(10)

import plotly.graph_objects as gp
tract_10201_df = tract_10201_df.head(10)
y_income = list(tract_10201_df['Label (Grouping)'])
x_O = tract_10201_df[owner_col] * -1
x_R = tract_10201_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Monthly Cost of Tract 102.01', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

# Tract 102.02 Analysis

owner_col = 'Census Tract 102.02, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 102.02, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_10202_df = finance_char_df[['Label (Grouping)', 'Census Tract 102.02, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[15:26 , :]
tract_10202_df.head()

tract_10202_df = tract_10202_df.applymap(lambda x: 0 if x == '(X)' else x)
tract_10202_df[owner_col] = tract_10202_df[owner_col].str.replace(',', '').astype(float)
tract_10202_df[renter_col] = tract_10202_df[renter_col].str.replace(',', '').astype(float)

tract_10202_df.head(10)

import plotly.graph_objects as gp
tract_10202_df = tract_10202_df.head(10)
y_income = list(tract_10202_df['Label (Grouping)'])
x_O = tract_10202_df[owner_col] * -1
x_R = tract_10202_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Monthly Cost of Tract 102.02', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

# Tract 105 Analysis

owner_col = 'Census Tract 105, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 105, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_105_df = finance_char_df[['Label (Grouping)', 'Census Tract 105, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[15:26 , :]
tract_105_df.head()

tract_105_df = tract_105_df.applymap(lambda x: 0 if x == '(X)' else x)
tract_105_df[owner_col] = tract_105_df[owner_col].str.replace(',', '').astype(float)
tract_105_df[renter_col] = tract_105_df[renter_col].str.replace(',', '').astype(float)

tract_105_df.head(10)

import plotly.graph_objects as gp
tract_105_df = tract_105_df.head(10)
y_income = list(tract_105_df['Label (Grouping)'])
x_O = tract_105_df[owner_col] * -1
x_R = tract_105_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Monthly Cost of Tract 105', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

# Tract 110.01 Analysis

owner_col = 'Census Tract 110.01, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 110.01, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_11001_df = finance_char_df[['Label (Grouping)', 'Census Tract 110.01, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[15:26 , :]
tract_11001_df.head()

tract_11001_df = tract_11001_df.applymap(lambda x: 0 if x == '(X)' else x)
tract_11001_df[owner_col] = tract_11001_df[owner_col].str.replace(',', '').astype(float)
tract_11001_df[renter_col] = tract_11001_df[renter_col].str.replace(',', '').astype(float)

tract_11001_df.head(10)

import plotly.graph_objects as gp
tract_11001_df = tract_11001_df.head(10)
y_income = list(tract_11001_df['Label (Grouping)'])
x_O = tract_11001_df[owner_col] * -1
x_R = tract_11001_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Monthly Cost of Tract 110.01', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()

# Tract 110.02 Analysis

owner_col = 'Census Tract 110.02, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_col = 'Census Tract 110.02, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

tract_11002_df = finance_char_df[['Label (Grouping)', 'Census Tract 110.02, District of Columbia, District of Columbia!!Occupied housing units!!Estimate',owner_col, renter_col]].iloc[15:26 , :]
tract_11002_df.head()

tract_11002_df = tract_11002_df.applymap(lambda x: 0 if x == '(X)' else x)
tract_11002_df[owner_col] = tract_11002_df[owner_col].str.replace(',', '').astype(float)
tract_11002_df[renter_col] = tract_11002_df[renter_col].str.replace(',', '').astype(float)

tract_11002_df.head(10)

import plotly.graph_objects as gp
tract_11002_df = tract_11002_df.head(10)
y_income = list(tract_11002_df['Label (Grouping)'])
x_O = tract_11002_df[owner_col] * -1
x_R = tract_11002_df[renter_col] 


fig = gp.Figure()
  
# Adding owner data to the figure
fig.add_trace(gp.Bar(y= y_income, x = x_O, 
                     name = 'owner', 
                     orientation = 'h'))
  
# Adding renter data to the figure
fig.add_trace(gp.Bar(y = y_income, x = x_R,
                     name = 'renter', orientation = 'h'))
  
# Updating the layout for our graph
fig.update_layout(title = 'Unit Monthly Cost of Tract 110.02', barmode = 'relative',
                 title_font_size = 22,
                 bargap = 0.0, bargroupgap = 0,
                 xaxis = dict(tickvals = [-200, -150, -100, -50,
                                          0, 50, 100, 150, 200],
                                
                              ticktext = ['200', '150', '100','50', '0', 
                                          '50', '100', '150', '200'],
                                
                              title = 'Units',
                              title_font_size = 14)
                 )
  
fig.show()
