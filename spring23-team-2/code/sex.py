# -*- coding: utf-8 -*-
"""sex.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nrIMLB2ReWHvcD8of9GWwmvKVDlCcA0x
"""

!pip install -U -q PyDrive

from pydrive.auth import GoogleAuth

from pydrive.drive import GoogleDrive

from google.colab import auth

from oauth2client.client import GoogleCredentials

  # Authenticate and create the PyDrive client.

auth.authenticate_user()

gauth = GoogleAuth()

gauth.credentials = GoogleCredentials.get_application_default()

drive = GoogleDrive(gauth)

import matplotlib.pyplot as plt
import numpy as np

df5 = pd.read_csv('sex 2017 new_file.csv')

owner_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df5_105_male_df = df5[[owner_105_col, renter_105_col]].iloc[17:18,:]
df5_105_male_df[owner_105_col]=df5_105_male_df[owner_105_col].replace(regex=[r'\D+'], value="")
df5_105_male_df[renter_105_col]=df5_105_male_df[renter_105_col].replace(regex=[r'\D+'], value="")
df5_105_male_df = df5_105_male_df.dropna(subset=[owner_105_col, renter_105_col])

df5_105_male_df[owner_105_col] = df5_105_male_df[owner_105_col].astype(int)
df5_105_male_df[renter_105_col] = df5_105_male_df[renter_105_col].astype(int)
df5_105_male_df.head()

df5_105_female_df = df5[[owner_105_col, renter_105_col]].iloc[21:22,:]
df5_105_female_df[owner_105_col]=df5_105_female_df[owner_105_col].replace(regex=[r'\D+'], value="")
df5_105_female_df[renter_105_col]=df5_105_female_df[renter_105_col].replace(regex=[r'\D+'], value="")
df5_105_female_df = df5_105_female_df.dropna(subset=[owner_105_col, renter_105_col])

df5_105_female_df[owner_105_col] = df5_105_female_df[owner_105_col].astype(int)
df5_105_female_df[renter_105_col] = df5_105_female_df[renter_105_col].astype(int)
df5_105_female_df.head()

df5_105_male_list = df5_105_male_df.values.tolist()
print(df5_105_male_list[0][0])

df5_105_female_list = df5_105_female_df.values.tolist()
print(df5_105_female_list[0][0])

import matplotlib.pyplot as plt
import numpy as np

df4 = pd.read_csv('sex 2018 new_file.csv')

owner_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df4_105_male_df = df4[[owner_105_col, renter_105_col]].iloc[17:18,:]
df4_105_male_df[owner_105_col]=df4_105_male_df[owner_105_col].replace(regex=[r'\D+'], value="")
df4_105_male_df[renter_105_col]=df4_105_male_df[renter_105_col].replace(regex=[r'\D+'], value="")
df4_105_male_df = df4_105_male_df.dropna(subset=[owner_105_col, renter_105_col])

df4_105_male_df[owner_105_col] = df4_105_male_df[owner_105_col].astype(int)
df4_105_male_df[renter_105_col] = df4_105_male_df[renter_105_col].astype(int)
df4_105_male_df.head()

df4_105_female_df = df4[[owner_105_col, renter_105_col]].iloc[21:22,:]
df4_105_female_df[owner_105_col]=df4_105_female_df[owner_105_col].replace(regex=[r'\D+'], value="")
df4_105_female_df[renter_105_col]=df4_105_female_df[renter_105_col].replace(regex=[r'\D+'], value="")
df4_105_female_df = df4_105_female_df.dropna(subset=[owner_105_col, renter_105_col])

df4_105_female_df[owner_105_col] = df4_105_female_df[owner_105_col].astype(int)
df4_105_female_df[renter_105_col] = df4_105_female_df[renter_105_col].astype(int)
df4_105_female_df.head()

df4_105_male_list = df4_105_male_df.values.tolist()
print(df4_105_male_list[0][0])

df4_105_female_list = df4_105_female_df.values.tolist()
print(df4_105_female_list[0][0])

import numpy as np

df3 = pd.read_csv('sex 2019 new_file.csv')

owner_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df3_105_male_df = df3[[owner_105_col, renter_105_col]].iloc[17:18,:]
df3_105_male_df[owner_105_col]=df3_105_male_df[owner_105_col].replace(regex=[r'\D+'], value="")
df3_105_male_df[renter_105_col]=df3_105_male_df[renter_105_col].replace(regex=[r'\D+'], value="")
df3_105_male_df = df3_105_male_df.dropna(subset=[owner_105_col, renter_105_col])

df3_105_male_df[owner_105_col] = df3_105_male_df[owner_105_col].astype(int)
df3_105_male_df[renter_105_col] = df3_105_male_df[renter_105_col].astype(int)
df3_105_male_df.head()

df3_105_female_df = df3[[owner_105_col, renter_105_col]].iloc[21:22,:]
df3_105_female_df[owner_105_col]=df3_105_female_df[owner_105_col].replace(regex=[r'\D+'], value="")
df3_105_female_df[renter_105_col]=df3_105_female_df[renter_105_col].replace(regex=[r'\D+'], value="")
df3_105_female_df = df3_105_female_df.dropna(subset=[owner_105_col, renter_105_col])

df3_105_female_df[owner_105_col] = df3_105_female_df[owner_105_col].astype(int)
df3_105_female_df[renter_105_col] = df3_105_female_df[renter_105_col].astype(int)
df3_105_female_df.head()

df3_105_male_list = df3_105_male_df.values.tolist()
print(df3_105_male_list[0][0])

df3_105_female_list = df3_105_female_df.values.tolist()
print(df3_105_female_list[0][0])

import matplotlib.pyplot as plt
import numpy as np

df2 = pd.read_csv('sex 2020 new_file.csv')

owner_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df2_105_male_df = df2[[owner_105_col, renter_105_col]].iloc[17:18,:]
df2_105_male_df[owner_105_col]=df2_105_male_df[owner_105_col].replace(regex=[r'\D+'], value="")
df2_105_male_df[renter_105_col]=df2_105_male_df[renter_105_col].replace(regex=[r'\D+'], value="")
df2_105_male_df = df2_105_male_df.dropna(subset=[owner_105_col, renter_105_col])

df2_105_male_df[owner_105_col] = df2_105_male_df[owner_105_col].astype(int)
df2_105_male_df[renter_105_col] = df2_105_male_df[renter_105_col].astype(int)
df2_105_male_df.head()

df2_105_female_df = df2[[owner_105_col, renter_105_col]].iloc[21:22,:]
df2_105_female_df[owner_105_col]=df2_105_female_df[owner_105_col].replace(regex=[r'\D+'], value="")
df2_105_female_df[renter_105_col]=df2_105_female_df[renter_105_col].replace(regex=[r'\D+'], value="")
df2_105_female_df = df2_105_female_df.dropna(subset=[owner_105_col, renter_105_col])

df2_105_female_df[owner_105_col] = df2_105_female_df[owner_105_col].astype(int)
df2_105_female_df[renter_105_col] = df2_105_female_df[renter_105_col].astype(int)
df2_105_female_df.head()

df2_105_male_list = df2_105_male_df.values.tolist()
print(df2_105_male_list[0][0])

df2_105_female_list = df2_105_female_df.values.tolist()
print(df2_105_female_list[0][0])

import matplotlib.pyplot as plt
import numpy as np

df1 = pd.read_csv('sex 2021 new_file.csv')

owner_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_105_col = 'Census Tract 105, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df1_105_male_df = df1[[owner_105_col, renter_105_col]].iloc[17:18,:]
df1_105_male_df[owner_105_col]=df1_105_male_df[owner_105_col].replace(regex=[r'\D+'], value="")
df1_105_male_df[renter_105_col]=df1_105_male_df[renter_105_col].replace(regex=[r'\D+'], value="")
df1_105_male_df = df1_105_male_df.dropna(subset=[owner_105_col, renter_105_col])

df1_105_male_df[owner_105_col] = df1_105_male_df[owner_105_col].astype(int)
df1_105_male_df[renter_105_col] = df1_105_male_df[renter_105_col].astype(int)
df1_105_male_df.head()

df1_105_female_df = df1[[owner_105_col, renter_105_col]].iloc[21:22,:]
df1_105_female_df[owner_105_col]=df1_105_female_df[owner_105_col].replace(regex=[r'\D+'], value="")
df1_105_female_df[renter_105_col]=df1_105_female_df[renter_105_col].replace(regex=[r'\D+'], value="")
df1_105_female_df = df1_105_female_df.dropna(subset=[owner_105_col, renter_105_col])

df1_105_female_df[owner_105_col] = df1_105_female_df[owner_105_col].astype(int)
df1_105_female_df[renter_105_col] = df1_105_female_df[renter_105_col].astype(int)
df1_105_female_df.head()

df1_105_male_list = df1_105_male_df.values.tolist()
print(df1_105_male_list[0][0])

df1_105_female_list = df1_105_female_df.values.tolist()
print(df1_105_female_list[0][0])

#owner
# Create data
years = [2017, 2018, 2019, 2020 , 2021]
male = []
male.append(df5_105_male_list[0][0]) 

male.append(df4_105_male_list[0][0])

male.append(df3_105_male_list[0][0])

male.append(df2_105_male_list[0][0])

male.append(df1_105_male_list[0][0])
#[df5_105_list[0][1],df4_105_list[0][1],df3_105_list[0][1],df2_105_list[0][1],df1_105_list[0][1]],
female = []
female.append(df5_105_female_list[0][0])

female.append(df4_105_female_list[0][0])

female.append(df3_105_female_list[0][0])

female.append(df2_105_female_list[0][0])

female.append(df1_105_female_list[0][0])


male = [float(x) for x in male]

female = [float(x) for x in female]

race_units = {
   'Male': tuple(male),
   'Female': tuple(female),
   }


   # Plot the graph
fig, ax = plt.subplots()
for race, units in race_units.items():
    ax.plot(years, units, label=race)

# Add legends, titles, axis labels, etc.
ax.set_title('Owner-occupied Units by Sex, Data from Cencus Tract 105')
ax.set_xlabel('Year')
ax.set_ylabel('Units')

# Adjust the y-axis scale
max_y = max([max(units) for units in race_units.values()])
ax.set_ylim([0, (max_y // 10 + 1) * 10])

# Move the legend outside of the plot area
ax.legend(bbox_to_anchor=(1.04,0.5), loc="center left", borderaxespad=0)

# Show the chart
plt.show()

#renter
# Create data
years = [2017, 2018, 2019, 2020 , 2021]
male = []
male.append(df5_105_male_list[0][1]) 

male.append(df4_105_male_list[0][1])

male.append(df3_105_male_list[0][1])

male.append(df2_105_male_list[0][1])

male.append(df1_105_male_list[0][1])
#[df5_105_list[0][1],df4_105_list[0][1],df3_105_list[0][1],df2_105_list[0][1],df1_105_list[0][1]],
female = []
female.append(df5_105_female_list[0][1])

female.append(df4_105_female_list[0][1])

female.append(df3_105_female_list[0][1])

female.append(df2_105_female_list[0][1])

female.append(df1_105_female_list[0][1])


male = [float(x) for x in male]

female = [float(x) for x in female]

race_units = {
   'Male': tuple(male),
   'Female': tuple(female),
   }


   # Plot the graph
fig, ax = plt.subplots()
for race, units in race_units.items():
    ax.plot(years, units, label=race)

# Add legends, titles, axis labels, etc.
ax.set_title('Renter-occupied Units by Sex, Data from Cencus Tract 105')
ax.set_xlabel('Year')
ax.set_ylabel('Units')

# Adjust the y-axis scale
max_y = max([max(units) for units in race_units.values()])
ax.set_ylim([0, (max_y // 10 + 1) * 10])

# Move the legend outside of the plot area
ax.legend(bbox_to_anchor=(1.04,0.5), loc="center left", borderaxespad=0)

# Show the chart
plt.show()

#female
# Create data
years = [2017, 2018, 2019, 2020 , 2021]
owner = []
owner.append(df5_105_female_list[0][0]) 

owner.append(df4_105_female_list[0][0])

owner.append(df3_105_female_list[0][0])

owner.append(df2_105_female_list[0][0])

owner.append(df1_105_female_list[0][0])


renter = []
renter.append(df5_105_female_list[0][1])

renter.append(df4_105_female_list[0][1])

renter.append(df3_105_female_list[0][1])

renter.append(df2_105_female_list[0][1])

renter.append(df1_105_female_list[0][1])


owner = [float(x) for x in owner]

renter = [float(x) for x in renter]

race_units = {
   'Owner': tuple(owner),
   'Renter': tuple(renter),
   }


   # Plot the graph
fig, ax = plt.subplots()
for race, units in race_units.items():
    ax.plot(years, units, label=race)

# Add legends, titles, axis labels, etc.
ax.set_title('Female householder, no spouse present, Data from Cencus Tract 105')
ax.set_xlabel('Year')
ax.set_ylabel('Units')

# Adjust the y-axis scale
max_y = max([max(units) for units in race_units.values()])
ax.set_ylim([0, (max_y // 10 + 1) * 10])

# Move the legend outside of the plot area
ax.legend(bbox_to_anchor=(1.04,0.5), loc="center left", borderaxespad=0)

# Show the chart
plt.show()

#female
# Create data
years = [2017, 2018, 2019, 2020 , 2021]
owner = []
owner.append(df5_105_male_list[0][0]) 

owner.append(df4_105_male_list[0][0])

owner.append(df3_105_male_list[0][0])

owner.append(df2_105_male_list[0][0])

owner.append(df1_105_male_list[0][0])


renter = []
renter.append(df5_105_male_list[0][1])

renter.append(df4_105_male_list[0][1])

renter.append(df3_105_male_list[0][1])

renter.append(df2_105_male_list[0][1])

renter.append(df1_105_male_list[0][1])


owner = [float(x) for x in owner]

renter = [float(x) for x in renter]

race_units = {
   'Owner': tuple(owner),
   'Renter': tuple(renter),
   }


   # Plot the graph
fig, ax = plt.subplots()
for race, units in race_units.items():
    ax.plot(years, units, label=race)

# Add legends, titles, axis labels, etc.
ax.set_title('Female householder, no spouse present, Data from Cencus Tract 105')
ax.set_xlabel('Year')
ax.set_ylabel('Units')

# Adjust the y-axis scale
max_y = max([max(units) for units in race_units.values()])
ax.set_ylim([0, (max_y // 10 + 1) * 10])

# Move the legend outside of the plot area
ax.legend(bbox_to_anchor=(1.04,0.5), loc="center left", borderaxespad=0)

# Show the chart
plt.show()

import matplotlib.pyplot as plt

sizes = [df1_105_male_list[0][0], df1_105_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2021')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df2_105_male_list[0][0], df2_105_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2020')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df3_105_male_list[0][0], df3_105_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2019')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df4_105_male_list[0][0], df4_105_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2018')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df5_105_male_list[0][0], df5_105_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2017')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df5_105_male_list[0][1], df5_105_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2017')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df4_105_male_list[0][1], df4_105_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2018')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df3_105_male_list[0][1], df3_105_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2019')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df2_105_male_list[0][1], df2_105_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2020')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df1_105_male_list[0][1], df1_105_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2021')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

#2020 completed
link ='https://drive.google.com/file/d/1QH1v2bCN2PALKpGLZEBPmp_p_HhsC2v9/view?usp=share_link'
import pandas as pd

 # to get the id part of the file

id = link.split("/")[-2]

downloaded = drive.CreateFile({'id':id})

downloaded.GetContentFile('sex ACSST5Y2020.S2501-2023-03-19T190052.csv') 

df2 = pd.read_csv('sex ACSST5Y2020.S2501-2023-03-19T190052.csv')

# Remove all columns containing "Margin" in the column name
df2 = df2.loc[:, ~df2.columns.str.contains('Margin')]

# Save the modified DataFrame to a new CSV file
df2.to_csv('sex 2020 new_file.csv', index=False)

import matplotlib.pyplot as plt
import numpy as np
sex_2020_df = pd.read_csv("sex 2020 new_file.csv")

owner_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df2_64_male_df = df2[[owner_64_col, renter_64_col]].iloc[17:18,:]
df2_64_male_df[owner_64_col]=df2_64_male_df[owner_64_col].replace(regex=[r'\D+'], value="")
df2_64_male_df[renter_64_col]=df2_64_male_df[renter_64_col].replace(regex=[r'\D+'], value="")
df2_64_male_df = df2_64_male_df.dropna(subset=[owner_64_col, renter_64_col])

df2_64_male_df[owner_64_col] = df2_64_male_df[owner_64_col].astype(int)
df2_64_male_df[renter_64_col] = df2_64_male_df[renter_64_col].astype(int)
df2_64_male_df.head()

df2_64_female_df = df2[[owner_64_col, renter_64_col]].iloc[21:22,:]
df2_64_female_df[owner_64_col]=df2_64_female_df[owner_64_col].replace(regex=[r'\D+'], value="")
df2_64_female_df[renter_64_col]=df2_64_female_df[renter_64_col].replace(regex=[r'\D+'], value="")
df2_64_female_df = df2_64_female_df.dropna(subset=[owner_64_col, renter_64_col])

df2_64_female_df[owner_64_col] = df2_64_female_df[owner_64_col].astype(int)
df2_64_female_df[renter_64_col] = df2_64_female_df[renter_64_col].astype(int)
df2_64_female_df.head()

df2_64_male_list = df2_64_male_df.values.tolist()
print(df2_64_male_list[0][0])

df2_64_female_list = df2_64_female_df.values.tolist()
print(df2_64_female_list[0][0])

#2019 completed
link ='https://drive.google.com/file/d/1wL1SBqt4Bj9-zxfpjXVdNAn3E1jcBtKq/view?usp=share_link'
import pandas as pd

 # to get the id part of the file

id = link.split("/")[-2]

downloaded = drive.CreateFile({'id':id})

downloaded.GetContentFile('sex ACSST5Y2019.S2501-2023-03-19T190057.csv') 

df3 = pd.read_csv('sex ACSST5Y2019.S2501-2023-03-19T190057.csv')

# Remove all columns containing "Margin" in the column name
df3 = df3.loc[:, ~df3.columns.str.contains('Margin')]

# Save the modified DataFrame to a new CSV file
df3.to_csv('sex 2019 new_file.csv', index=False)

import matplotlib.pyplot as plt
import numpy as np
sex_2020_df = pd.read_csv("sex 2019 new_file.csv")

owner_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df3_64_male_df = df3[[owner_64_col, renter_64_col]].iloc[17:18,:]
df3_64_male_df[owner_64_col]=df3_64_male_df[owner_64_col].replace(regex=[r'\D+'], value="")
df3_64_male_df[renter_64_col]=df3_64_male_df[renter_64_col].replace(regex=[r'\D+'], value="")
#2021
df3_64_male_df = df3_64_male_df.dropna(subset=[owner_64_col, renter_64_col])

df3_64_male_df[owner_64_col] = df3_64_male_df[owner_64_col].astype(int)
df3_64_male_df[renter_64_col] = df3_64_male_df[renter_64_col].astype(int)
df3_64_male_df.head()

df3_64_female_df = df3[[owner_64_col, renter_64_col]].iloc[21:22,:]
df3_64_female_df[owner_64_col]=df3_64_female_df[owner_64_col].replace(regex=[r'\D+'], value="")
df3_64_female_df[renter_64_col]=df3_64_female_df[renter_64_col].replace(regex=[r'\D+'], value="")
#2021
df3_64_female_df = df3_64_female_df.dropna(subset=[owner_64_col, renter_64_col])

df3_64_female_df[owner_64_col] = df3_64_female_df[owner_64_col].astype(int)
df3_64_female_df[renter_64_col] = df3_64_female_df[renter_64_col].astype(int)
df3_64_female_df.head()

df3_64_male_list = df3_64_male_df.values.tolist()
print(df3_64_male_list[0][0])

df3_64_female_list = df3_64_female_df.values.tolist()
print(df3_64_female_list[0][0])

#2018 completed
link ='https://drive.google.com/file/d/1VtrGX_90K6Dv_2I_qXQdOQppEK_-shOc/view?usp=share_link'
import pandas as pd

 # to get the id part of the file

id = link.split("/")[-2]

downloaded = drive.CreateFile({'id':id})

downloaded.GetContentFile('sex ACSST5Y2018.S2501-2023-03-19T190101.csv') 

df4 = pd.read_csv('sex ACSST5Y2018.S2501-2023-03-19T190101.csv')

# Remove all columns containing "Margin" in the column name
df4 = df4.loc[:, ~df4.columns.str.contains('Margin')]

# Save the modified DataFrame to a new CSV file
df4.to_csv('sex 2018 new_file.csv', index=False)

import matplotlib.pyplot as plt
import numpy as np
sex_2020_df = pd.read_csv("sex 2018 new_file.csv")

owner_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df4_64_male_df = df4[[owner_64_col, renter_64_col]].iloc[17:18,:]
df4_64_male_df[owner_64_col]=df4_64_male_df[owner_64_col].replace(regex=[r'\D+'], value="")
df4_64_male_df[renter_64_col]=df4_64_male_df[renter_64_col].replace(regex=[r'\D+'], value="")
df4_64_male_df = df4_64_male_df.dropna(subset=[owner_64_col, renter_64_col])

df4_64_male_df[owner_64_col] = df4_64_male_df[owner_64_col].astype(int)
df4_64_male_df[renter_64_col] = df4_64_male_df[renter_64_col].astype(int)
df4_64_male_df.head()

df4_64_female_df = df4[[owner_64_col, renter_64_col]].iloc[21:22,:]
df4_64_female_df[owner_64_col]=df4_64_female_df[owner_64_col].replace(regex=[r'\D+'], value="")
df4_64_female_df[renter_64_col]=df4_64_female_df[renter_64_col].replace(regex=[r'\D+'], value="")
df4_64_female_df = df4_64_female_df.dropna(subset=[owner_64_col, renter_64_col])

df4_64_female_df[owner_64_col] = df4_64_female_df[owner_64_col].astype(int)
df4_64_female_df[renter_64_col] = df4_64_female_df[renter_64_col].astype(int)
df4_64_female_df.head()

df4_64_male_list = df4_64_male_df.values.tolist()
print(df4_64_male_list[0][0])

df4_64_female_list = df4_64_female_df.values.tolist()
print(df4_64_female_list[0][0])

#2017 completed
link ='https://drive.google.com/file/d/1UQn6nLE7fzzJ7KwIRQQsA8ywMHXNKDqz/view?usp=share_link'
import pandas as pd

 # to get the id part of the file

id = link.split("/")[-2]

downloaded = drive.CreateFile({'id':id})

downloaded.GetContentFile('sex ACSST5Y2017.S2501-2023-03-19T190106.csv') 

df5 = pd.read_csv('sex ACSST5Y2017.S2501-2023-03-19T190106.csv')

# Remove all columns containing "Margin" in the column name
df5 = df5.loc[:, ~df5.columns.str.contains('Margin')]

# Save the modified DataFrame to a new CSV file
df5.to_csv('sex 2017 new_file.csv', index=False)

import matplotlib.pyplot as plt
import numpy as np
sex_2020_df = pd.read_csv("sex 2017 new_file.csv")

owner_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'
df5_64_male_df = df5[[owner_64_col, renter_64_col]].iloc[17:18,:]
df5_64_male_df[owner_64_col]=df5_64_male_df[owner_64_col].replace(regex=[r'\D+'], value="")
df5_64_male_df[renter_64_col]=df5_64_male_df[renter_64_col].replace(regex=[r'\D+'], value="")
df5_64_male_df = df5_64_male_df.dropna(subset=[owner_64_col, renter_64_col])

df5_64_male_df[owner_64_col] = df5_64_male_df[owner_64_col].astype(int)
df5_64_male_df[renter_64_col] = df5_64_male_df[renter_64_col].astype(int)
df5_64_male_df.head()

df5_64_female_df = df5[[owner_64_col, renter_64_col]].iloc[21:22,:]
df5_64_female_df[owner_64_col]=df5_64_female_df[owner_64_col].replace(regex=[r'\D+'], value="")
df5_64_female_df[renter_64_col]=df5_64_female_df[renter_64_col].replace(regex=[r'\D+'], value="")
df5_64_female_df = df5_64_female_df.dropna(subset=[owner_64_col, renter_64_col])

df5_64_female_df[owner_64_col] = df5_64_female_df[owner_64_col].astype(int)
df5_64_female_df[renter_64_col] = df5_64_female_df[renter_64_col].astype(int)
df5_64_female_df.head()

df5_64_male_list = df5_64_male_df.values.tolist()
print(df5_64_male_list[0][0])

df5_64_female_list = df5_64_female_df.values.tolist()
print(df5_64_female_list[0][0])

link ='https://drive.google.com/file/d/1rb-yVryGWh3AowUxQb3MU36aHtQ5nN3u/view?usp=share_link'
import pandas as pd

 # to get the id part of the file

id = link.split("/")[-2]

downloaded = drive.CreateFile({'id':id})

downloaded.GetContentFile('sex ACSST5Y2021.S2501-2023-03-19T190048.csv') 

df1 = pd.read_csv('sex ACSST5Y2021.S2501-2023-03-19T190048.csv')

# Remove all columns containing "Margin" in the column name
df1 = df1.loc[:, ~df1.columns.str.contains('Margin')]

# Save the modified DataFrame to a new CSV file
df1.to_csv('sex 2021 new_file.csv', index=False)

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
sex_2021_df = pd.read_csv("sex 2021 new_file.csv")

# Analysis of mean income
sex_2021_df.iloc[17:18,:]

sex_2021_df.iloc[21:22,:]

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
sex_2020_df = pd.read_csv("sex 2020 new_file.csv")

# Analysis of mean income
sex_2020_df.iloc[17:18,:]

sex_2020_df.iloc[21:22,:]

owner_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Owner-occupied housing units!!Estimate'
renter_64_col = 'Census Tract 64, District of Columbia, District of Columbia!!Renter-occupied housing units!!Estimate'

df1_64_male_df = df1[[owner_64_col, renter_64_col]].iloc[17:18,:]
df1_64_male_df[owner_64_col]=df1_64_male_df[owner_64_col].replace(regex=[r'\D+'], value="")
df1_64_male_df[renter_64_col]=df1_64_male_df[renter_64_col].replace(regex=[r'\D+'], value="")
#2021
df1_64_male_df = df1_64_male_df.dropna(subset=[owner_64_col, renter_64_col])

df1_64_male_df[owner_64_col] = df1_64_male_df[owner_64_col].astype(int)
df1_64_male_df[renter_64_col] = df1_64_male_df[renter_64_col].astype(int)
df1_64_male_df.head()

df1_64_male_list = df1_64_male_df.values.tolist()
print(df1_64_male_list[0][0])

df1_64_female_df = df1[[owner_64_col, renter_64_col]].iloc[21:22,:]
df1_64_female_df[owner_64_col]=df1_64_female_df[owner_64_col].replace(regex=[r'\D+'], value="")
df1_64_female_df[renter_64_col]=df1_64_female_df[renter_64_col].replace(regex=[r'\D+'], value="")
#2021
df1_64_female_df = df1_64_female_df.dropna(subset=[owner_64_col, renter_64_col])

df1_64_female_df[owner_64_col] = df1_64_female_df[owner_64_col].astype(int)
df1_64_female_df[renter_64_col] = df1_64_female_df[renter_64_col].astype(int)
df1_64_female_df.head()

df1_64_female_list = df1_64_female_df.values.tolist()
print(df1_64_female_list[0][0])

import matplotlib.pyplot as plt

sizes = [df1_64_male_list[0][0], df1_64_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2021')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df1_64_male_list[0][1], df1_64_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2021')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df2_64_male_list[0][0], df2_64_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2020')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df2_64_male_list[0][1], df2_64_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2020')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

import matplotlib.pyplot as plt

sizes = [df3_64_male_list[0][0], df3_64_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2019')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df3_64_male_list[0][1], df3_64_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2019')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df4_64_male_list[0][1], df4_64_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2019')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df5_64_male_list[0][0], df5_64_female_list[0][0]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Owner-Occupied Units 2017')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

import matplotlib.pyplot as plt

sizes = [df5_64_male_list[0][1], df5_64_female_list[0][1]]
labels = ['Male householder, no spouse present', 'Female householder, no spouse present']
colors = ['gold', 'yellowgreen']

fig, (ax1, ax2) = plt.subplots(ncols=2)

ax1.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
ax1.set_title('Renter-Occupied Units 2017')

handles, _ = ax1.get_legend_handles_labels()
ax2.axis('off')
ax2.legend(handles, labels, loc="center")

plt.show()

"""- 横坐标 时间

- 纵坐标 Units
- 按照性别划分曲线，两张图，一张o，一张r
- 按照o, r划分曲线，两张图，一张女，一张男
"""

import matplotlib.pyplot as plt

#owner
# Create data
years = [2017, 2018, 2019, 2020 , 2021]
male = []
male.append(df5_64_male_list[0][0]) 

male.append(df4_64_male_list[0][0])

male.append(df3_64_male_list[0][0])

male.append(df2_64_male_list[0][0])

male.append(df1_64_male_list[0][0])
#[df5_64_list[0][1],df4_64_list[0][1],df3_64_list[0][1],df2_64_list[0][1],df1_64_list[0][1]],
female = []
female.append(df5_64_female_list[0][0])

female.append(df4_64_female_list[0][0])

female.append(df3_64_female_list[0][0])

female.append(df2_64_female_list[0][0])

female.append(df1_64_female_list[0][0])


male = [float(x) for x in male]

female = [float(x) for x in female]

race_units = {
   'Male': tuple(male),
   'Female': tuple(female),
   }


   # Plot the graph
fig, ax = plt.subplots()
for race, units in race_units.items():
    ax.plot(years, units, label=race)

# Add legends, titles, axis labels, etc.
ax.set_title('Owner-occupied Units by Sex, Data from Cencus Tract 64')
ax.set_xlabel('Year')
ax.set_ylabel('Units')

# Adjust the y-axis scale
max_y = max([max(units) for units in race_units.values()])
ax.set_ylim([0, (max_y // 10 + 1) * 10])

# Move the legend outside of the plot area
ax.legend(bbox_to_anchor=(1.04,0.5), loc="center left", borderaxespad=0)

# Show the chart
plt.show()

import matplotlib.pyplot as plt

#renter
# Create data
years = [2017, 2018, 2019, 2020 , 2021]
male = []
male.append(df5_64_male_list[0][1])

male.append(df4_64_male_list[0][1])

male.append(df3_64_male_list[0][1])

male.append(df2_64_male_list[0][1])

male.append(df1_64_male_list[0][1])
#[df5_64_list[0][1],df4_64_list[0][1],df3_64_list[0][1],df2_64_list[0][1],df1_64_list[0][1]],
female = []
female.append(df5_64_female_list[0][1])

female.append(df4_64_female_list[0][1])

female.append(df3_64_female_list[0][1])

female.append(df2_64_female_list[0][1])

female.append(df1_64_female_list[0][1])


male = [float(x) for x in male]

female = [float(x) for x in female]

race_units = {
   'Male': tuple(male),
   'Female': tuple(female),
   }


   # Plot the graph
fig, ax = plt.subplots()
for race, units in race_units.items():
    ax.plot(years, units, label=race)

# Add legends, titles, axis labels, etc.
ax.set_title('Renter-occupied Units by Sex, Data from Cencus Tract 64')
ax.set_xlabel('Year')
ax.set_ylabel('Units')

# Adjust the y-axis scale
max_y = max([max(units) for units in race_units.values()])
ax.set_ylim([0, (max_y // 10 + 1) * 10])

# Move the legend outside of the plot area
ax.legend(bbox_to_anchor=(1.04,0.5), loc="center left", borderaxespad=0)

# Show the chart
plt.show()

import matplotlib.pyplot as plt

#female
# Create data
years = [2017, 2018, 2019, 2020 , 2021]
owner = []
owner.append(df5_64_female_list[0][0]) 

owner.append(df4_64_female_list[0][0])

owner.append(df3_64_female_list[0][0])

owner.append(df2_64_female_list[0][0])

owner.append(df1_64_female_list[0][0])


renter = []
renter.append(df5_64_female_list[0][1])

renter.append(df4_64_female_list[0][1])

renter.append(df3_64_female_list[0][1])

renter.append(df2_64_female_list[0][1])

renter.append(df1_64_female_list[0][1])


owner = [float(x) for x in owner]

renter = [float(x) for x in renter]

race_units = {
   'Owner': tuple(owner),
   'Renter': tuple(renter),
   }


   # Plot the graph
fig, ax = plt.subplots()
for race, units in race_units.items():
    ax.plot(years, units, label=race)

# Add legends, titles, axis labels, etc.
ax.set_title('Female householder, no spouse present, Data from Cencus Tract 64')
ax.set_xlabel('Year')
ax.set_ylabel('Units')

# Adjust the y-axis scale
max_y = max([max(units) for units in race_units.values()])
ax.set_ylim([0, (max_y // 10 + 1) * 10])

# Move the legend outside of the plot area
ax.legend(bbox_to_anchor=(1.04,0.5), loc="center left", borderaxespad=0)

# Show the chart
plt.show()

import matplotlib.pyplot as plt

#female
# Create data
years = [2017, 2018, 2019, 2020 , 2021]
owner = []
owner.append(df5_64_male_list[0][0]) 

owner.append(df4_64_male_list[0][0])

owner.append(df3_64_male_list[0][0])

owner.append(df2_64_male_list[0][0])

owner.append(df1_64_male_list[0][0])


renter = []
renter.append(df5_64_male_list[0][1])

renter.append(df4_64_male_list[0][1])

renter.append(df3_64_male_list[0][1])

renter.append(df2_64_male_list[0][1])

renter.append(df1_64_male_list[0][1])


owner = [float(x) for x in owner]

renter = [float(x) for x in renter]

race_units = {
   'Owner': tuple(owner),
   'Renter': tuple(renter),
   }


   # Plot the graph
fig, ax = plt.subplots()
for race, units in race_units.items():
    ax.plot(years, units, label=race)

# Add legends, titles, axis labels, etc.
ax.set_title('Male householder, no spouse present, Data from Cencus Tract 64')
ax.set_xlabel('Year')
ax.set_ylabel('Units')

# Adjust the y-axis scale
max_y = max([max(units) for units in race_units.values()])
ax.set_ylim([0, (max_y // 10 + 1) * 10])

# Move the legend outside of the plot area
ax.legend(bbox_to_anchor=(1.04,0.5), loc="center left", borderaxespad=0)

# Show the chart
plt.show()